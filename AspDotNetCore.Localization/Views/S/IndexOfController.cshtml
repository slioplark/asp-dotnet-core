@{
    ViewData["Title"] = "IndexOfController";
}

@*Result*@
<h2>Result</h2>

<h3>
    <a href="@Context.Request.Path"><input type="button" class="btn btn-primary" value="中文" /></a>
    <a href="?culture=en-US"><input type="button" class="btn btn-primary" value="英文" /></a>
</h3>

<h3>
    @ViewData["Language"] @ViewData["Translation"]
</h3>

<ul>
    <li><h4>@ViewData["One"]</h4></li>
    <li><h4>@ViewData["Two"]</h4></li>
    <li><h4>@ViewData["Three"]</h4></li>
    <li><h4>@ViewData["Four"]</h4></li>
    <li><h4>@ViewData["Five"]</h4></li>
    <li><h4>@ViewData["Six"]</h4></li>
    <li><h4>@ViewData["Seven"]</h4></li>
    <li><h4>@ViewData["Eight"]</h4></li>
    <li><h4>@ViewData["Nine"]</h4></li>
    <li><h4>@ViewData["Ten"]</h4></li>
</ul>

@*Step 1*@
<h2>Add Localization Service</h2>
<pre>
services.AddLocalization(options => options.ResourcesPath = "Resources");

services.AddMvc()
    .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix)
    .AddDataAnnotationsLocalization();
</pre>

@*Step 2*@
<h2>Set Localization</h2>
<pre>
var supportedCultures = new[]
{
    new CultureInfo("zh-TW"),
    new CultureInfo("en-US"),
};

app.UseRequestLocalization(new RequestLocalizationOptions
{
    DefaultRequestCulture = new RequestCulture("zh-TW"),
    SupportedCultures = supportedCultures,
    SupportedUICultures = supportedCultures
});
</pre>

@*Step 3*@
<h2>Add SharedResource Class(.cs) & SharedResource File(.resx)</h2>
<pre>
SharedResource.cs
SharedResource.zh-TW.resx
SharedResource.en-US.resx
</pre>

@*Step 4*@
<h2>DI in Controller</h2>
<pre>
private readonly IStringLocalizer&lt;SharedResource> _sharedLocalizer;

public SController(IStringLocalizer&lt;SharedResource> sharedLocalizer)
{
    _sharedLocalizer = sharedLocalizer;
}
</pre>

@*Step 5*@
<h2>Use @@SharedLocalizer in Controller</h2>
<pre>
@@ViewData["Language"] = @@SharedLocalizer["Language"];
</pre>