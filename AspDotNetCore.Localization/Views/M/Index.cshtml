@model LocalizationViewModel

@{
    ViewData["Title"] = "Index";
}

@*Result*@
<h2>Model Result</h2>

<h3>
    <a href="@Context.Request.Path"><input type="button" class="btn btn-primary" value="中文" /></a>
    <a href="?culture=en-US"><input type="button" class="btn btn-primary" value="英文" /></a>
</h3>

<h3>
    @Html.DisplayNameFor(m => m.Language) @Html.DisplayNameFor(m => m.Translation)
</h3>

<ul>
    <li><h4>@Html.DisplayNameFor(m => m.One)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Two)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Three)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Four)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Five)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Six)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Seven)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Eight)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Nine)</h4></li>
    <li><h4>@Html.DisplayNameFor(m => m.Ten)</h4></li>
</ul>

@*Step 1*@
<h2>Add Localization Service</h2>
<pre>
services.AddLocalization(options => options.ResourcesPath = "Resources");

services.AddMvc()
    .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix)
    .AddDataAnnotationsLocalization();
</pre>

@*Step 2*@
<h2>Set Localization</h2>
<pre>
var supportedCultures = new[]
{
    new CultureInfo("zh-TW"),
    new CultureInfo("en-US"),
};

app.UseRequestLocalization(new RequestLocalizationOptions
{
    DefaultRequestCulture = new RequestCulture("zh-TW"),
    SupportedCultures = supportedCultures,
    SupportedUICultures = supportedCultures
});
</pre>

@*Step 3*@
<h2>Add Resource File(.resx)</h2>
<pre>
Models
     |---LocalizationViewModel.en-US.resx
     |---LocalizationViewModel.zh-TW.resx 
</pre>

@*Step 4*@
<h2>DataAnnotations in Model</h2>
<pre>
[Display(Name = "Language")]
public string Language { get; set; }
</pre>

@*Step 5*@
<h2>Use @@Html.DisplayNameFor in View</h2>
<pre>
@@Html.DisplayNameFor(m => m.Language)
</pre>